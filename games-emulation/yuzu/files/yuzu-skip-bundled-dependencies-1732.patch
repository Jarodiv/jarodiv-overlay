diff --git a/CMakeModules/FindSimpleIni.cmake b/CMakeModules/FindSimpleIni.cmake
index 13426b25b..27638ee6f 100644
--- a/CMakeModules/FindSimpleIni.cmake
+++ b/CMakeModules/FindSimpleIni.cmake
@@ -2,20 +2,19 @@
 #
 # SPDX-License-Identifier: GPL-3.0-or-later
 
+find_path(SimpleIni_INCLUDE_DIR SimpleIni.h)
+
 include(FindPackageHandleStandardArgs)
 
-find_package(SimpleIni QUIET CONFIG)
-if (SimpleIni_CONSIDERED_CONFIGS)
-    find_package_handle_standard_args(SimpleIni CONFIG_MODE)
-else()
-    find_package(PkgConfig QUIET)
-    pkg_search_module(SIMPLEINI QUIET IMPORTED_TARGET simpleini)
-    find_package_handle_standard_args(SimpleIni
-        REQUIRED_VARS SIMPLEINI_INCLUDEDIR
-        VERSION_VAR SIMPLEINI_VERSION
-    )
-endif()
+find_package_handle_standard_args(SimpleIni
+    REQUIRED_VARS SimpleIni_INCLUDE_DIR
+)
 
 if (SimpleIni_FOUND AND NOT TARGET SimpleIni::SimpleIni)
-    add_library(SimpleIni::SimpleIni ALIAS PkgConfig::SIMPLEINI)
+    add_library(SimpleIni::SimpleIni INTERFACE IMPORTED)
+    set_target_properties(SimpleIni::SimpleIni PROPERTIES
+        INTERFACE_INCLUDE_DIRECTORIES "${SimpleIni_INCLUDE_DIR}"
+    )
 endif()
+
+mark_as_advanced(SimpleIni_INCLUDE_DIR)
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index d49a2e43e..025fcc43a 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -39,15 +39,6 @@ endif()
 # Glad
 add_subdirectory(glad)
 
-# mbedtls
-add_subdirectory(mbedtls)
-target_include_directories(mbedtls PUBLIC ./mbedtls/include)
-if (NOT MSVC)
-    target_compile_options(mbedcrypto PRIVATE
-        -Wno-unused-but-set-variable
-        -Wno-string-concatenation)
-endif()
-
 # MicroProfile
 add_library(microprofile INTERFACE)
 target_include_directories(microprofile INTERFACE ./microprofile)
@@ -57,11 +48,6 @@ if (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL "12" AND CMAKE_CXX_COMPILER
     target_compile_options(microprofile INTERFACE "-Wno-array-bounds")
 endif()
 
-# libusb
-if (ENABLE_LIBUSB AND NOT TARGET libusb::usb)
-    add_subdirectory(libusb)
-endif()
-
 # SDL2
 if (YUZU_USE_EXTERNAL_SDL2)
     if (NOT WIN32)
@@ -86,27 +72,6 @@ if (YUZU_USE_EXTERNAL_SDL2)
     add_subdirectory(SDL)
 endif()
 
-# ENet
-if (NOT TARGET enet::enet)
-    add_subdirectory(enet)
-    target_include_directories(enet INTERFACE ./enet/include)
-    add_library(enet::enet ALIAS enet)
-endif()
-
-# Cubeb
-if (ENABLE_CUBEB AND NOT TARGET cubeb::cubeb)
-    set(BUILD_TESTS OFF)
-    set(BUILD_TOOLS OFF)
-    add_subdirectory(cubeb)
-    add_library(cubeb::cubeb ALIAS cubeb)
-    if (NOT MSVC)
-        if (TARGET speex)
-            target_compile_options(speex PRIVATE -Wno-sign-compare)
-        endif()
-        target_compile_options(cubeb PRIVATE -Wno-implicit-const-int-float-conversion)
-    endif()
-endif()
-
 # DiscordRPC
 if (USE_DISCORD_PRESENCE AND NOT TARGET DiscordRPC::discord-rpc)
     set(BUILD_EXAMPLES OFF)
@@ -115,59 +80,9 @@ if (USE_DISCORD_PRESENCE AND NOT TARGET DiscordRPC::discord-rpc)
     add_library(DiscordRPC::discord-rpc ALIAS discord-rpc)
 endif()
 
-# Sirit
-add_subdirectory(sirit)
-
-# httplib
-if (ENABLE_WEB_SERVICE AND NOT TARGET httplib::httplib)
-    set(HTTPLIB_REQUIRE_OPENSSL ON)
-    add_subdirectory(cpp-httplib)
-endif()
-
-# cpp-jwt
-if (ENABLE_WEB_SERVICE AND NOT TARGET cpp-jwt::cpp-jwt)
-    set(CPP_JWT_BUILD_EXAMPLES OFF)
-    set(CPP_JWT_BUILD_TESTS OFF)
-    set(CPP_JWT_USE_VENDORED_NLOHMANN_JSON OFF)
-    add_subdirectory(cpp-jwt)
-endif()
-
-# Opus
-if (NOT TARGET Opus::opus)
-    set(OPUS_BUILD_TESTING OFF)
-    set(OPUS_BUILD_PROGRAMS OFF)
-    set(OPUS_INSTALL_PKG_CONFIG_MODULE OFF)
-    set(OPUS_INSTALL_CMAKE_CONFIG_MODULE OFF)
-    add_subdirectory(opus)
-endif()
-
-# FFMpeg
-if (YUZU_USE_BUNDLED_FFMPEG)
-    add_subdirectory(ffmpeg)
-    set(FFmpeg_PATH "${FFmpeg_PATH}" PARENT_SCOPE)
-    set(FFmpeg_LDFLAGS "${FFmpeg_LDFLAGS}" PARENT_SCOPE)
-    set(FFmpeg_LIBRARIES "${FFmpeg_LIBRARIES}" PARENT_SCOPE)
-    set(FFmpeg_INCLUDE_DIR "${FFmpeg_INCLUDE_DIR}" PARENT_SCOPE)
-endif()
-
-# Vulkan-Headers
-if (YUZU_USE_EXTERNAL_VULKAN_HEADERS)
-    add_subdirectory(Vulkan-Headers)
-endif()
-
-# Vulkan-Utility-Libraries
-if (YUZU_USE_EXTERNAL_VULKAN_UTILITY_LIBRARIES)
-    add_subdirectory(Vulkan-Utility-Libraries)
-endif()
-
 # TZDB (Time Zone Database)
 add_subdirectory(nx_tzdb)
 
-# VMA
-if (NOT TARGET GPUOpen::VulkanMemoryAllocator)
-    add_subdirectory(VulkanMemoryAllocator)
-endif()
-
 if (NOT TARGET LLVM::Demangle)
     add_library(demangle demangle/ItaniumDemangle.cpp)
     target_include_directories(demangle PUBLIC ./demangle)
diff --git a/externals/nx_tzdb/CMakeLists.txt b/externals/nx_tzdb/CMakeLists.txt
index 13723f175..9568d1581 100644
--- a/externals/nx_tzdb/CMakeLists.txt
+++ b/externals/nx_tzdb/CMakeLists.txt
@@ -33,14 +33,16 @@ set(NX_TZDB_ARCHIVE "${CMAKE_CURRENT_BINARY_DIR}/${NX_TZDB_VERSION}.zip")
 set(NX_TZDB_ROMFS_DIR "${CMAKE_CURRENT_BINARY_DIR}/nx_tzdb")
 
 if ((NOT CAN_BUILD_NX_TZDB OR YUZU_DOWNLOAD_TIME_ZONE_DATA) AND NOT EXISTS ${NX_TZDB_ROMFS_DIR})
-    set(NX_TZDB_DOWNLOAD_URL "https://github.com/lat9nq/tzdb_to_nx/releases/download/${NX_TZDB_VERSION}/${NX_TZDB_VERSION}.zip")
+    if (NOT EXISTS ${NX_TZDB_ARCHIVE})
+        set(NX_TZDB_DOWNLOAD_URL "https://github.com/lat9nq/tzdb_to_nx/releases/download/${NX_TZDB_VERSION}/${NX_TZDB_VERSION}.zip")
 
-    message(STATUS "Downloading time zone data from ${NX_TZDB_DOWNLOAD_URL}...")
-    file(DOWNLOAD ${NX_TZDB_DOWNLOAD_URL} ${NX_TZDB_ARCHIVE}
-        STATUS NX_TZDB_DOWNLOAD_STATUS)
-    list(GET NX_TZDB_DOWNLOAD_STATUS 0 NX_TZDB_DOWNLOAD_STATUS_CODE)
-    if (NOT NX_TZDB_DOWNLOAD_STATUS_CODE EQUAL 0)
-        message(FATAL_ERROR "Time zone data download failed (status code ${NX_TZDB_DOWNLOAD_STATUS_CODE})")
+        message(STATUS "Downloading time zone data from ${NX_TZDB_DOWNLOAD_URL}...")
+        file(DOWNLOAD ${NX_TZDB_DOWNLOAD_URL} ${NX_TZDB_ARCHIVE}
+            STATUS NX_TZDB_DOWNLOAD_STATUS)
+        list(GET NX_TZDB_DOWNLOAD_STATUS 0 NX_TZDB_DOWNLOAD_STATUS_CODE)
+        if (NOT NX_TZDB_DOWNLOAD_STATUS_CODE EQUAL 0)
+            message(FATAL_ERROR "Time zone data download failed (status code ${NX_TZDB_DOWNLOAD_STATUS_CODE})")
+        endif()
     endif()
 
     file(ARCHIVE_EXTRACT
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index c7f4df802..008fb867a 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -1164,7 +1164,7 @@ else()
 endif()
 
 target_link_libraries(core PUBLIC common PRIVATE audio_core hid_core network video_core nx_tzdb tz)
-target_link_libraries(core PUBLIC Boost::headers PRIVATE fmt::fmt nlohmann_json::nlohmann_json mbedtls RenderDoc::API)
+target_link_libraries(core PUBLIC Boost::headers PRIVATE fmt::fmt nlohmann_json::nlohmann_json mbedtls mbedcrypto mbedx509 RenderDoc::API)
 if (MINGW)
     target_link_libraries(core PRIVATE ${MSWSOCK_LIBRARY})
 endif()
diff --git a/src/dedicated_room/CMakeLists.txt b/src/dedicated_room/CMakeLists.txt
index c0dcc0241..9bb163a82 100644
--- a/src/dedicated_room/CMakeLists.txt
+++ b/src/dedicated_room/CMakeLists.txt
@@ -13,7 +13,7 @@ if (ENABLE_WEB_SERVICE)
     target_link_libraries(yuzu-room PRIVATE web_service)
 endif()
 
-target_link_libraries(yuzu-room PRIVATE mbedtls mbedcrypto)
+target_link_libraries(yuzu-room PRIVATE mbedtls mbedcrypto mbedx509)
 if (MSVC)
     target_link_libraries(yuzu-room PRIVATE getopt)
 endif()
diff --git a/src/yuzu_cmd/CMakeLists.txt b/src/yuzu_cmd/CMakeLists.txt
index ebd8fd738..7339d7fd3 100644
--- a/src/yuzu_cmd/CMakeLists.txt
+++ b/src/yuzu_cmd/CMakeLists.txt
@@ -1,6 +1,9 @@
 # SPDX-FileCopyrightText: 2018 yuzu Emulator Project
 # SPDX-License-Identifier: GPL-2.0-or-later
 
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(INIH REQUIRED INIReader)
+
 # Credits to Samantas5855 and others for this function.
 function(create_resource file output filename)
     # Read hex data from file
